<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>net on liut</title><link>https://www.liut.xyz/tags/net/</link><description>Recent content in net on liut</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Copyright notice</copyright><lastBuildDate>Thu, 26 Oct 2017 21:00:02 +0800</lastBuildDate><atom:link href="https://www.liut.xyz/tags/net/index.xml" rel="self" type="application/rss+xml"/><item><title>Shadowsocks使用kcptun加速</title><link>https://www.liut.xyz/posts/net/shadowsocks%E4%BD%BF%E7%94%A8kcptun%E5%8A%A0%E9%80%9F/</link><pubDate>Thu, 26 Oct 2017 21:00:02 +0800</pubDate><guid>https://www.liut.xyz/posts/net/shadowsocks%E4%BD%BF%E7%94%A8kcptun%E5%8A%A0%E9%80%9F/</guid><description>常用加速软件有 NetSpeed 、KcpTun 、锐速（Server Speeder） 等，其中，NetSpeed 最为粗暴，直接双倍发包，能大大降低丢包率，当然，流量也会双倍消耗；kcptun ，双边加速（服务端和客户端都需要配置），基于 KCP 协议的 UDP 隧道，它可以将 TCP 流转换为 KCP+UDP 流。而 KCP 是一个快速可靠协议，要求配置低，效果明显；锐速，单边加速，收费，官方已破产，有破解版，需配置内核。以下为 kcptun 配置记录。</description></item><item><title>NAT 和 iptables</title><link>https://www.liut.xyz/posts/net/%E5%85%B3%E4%BA%8Enat%E7%9A%84%E7%90%86%E8%A7%A3/</link><pubDate>Wed, 25 Oct 2017 15:32:02 +0800</pubDate><guid>https://www.liut.xyz/posts/net/%E5%85%B3%E4%BA%8Enat%E7%9A%84%E7%90%86%E8%A7%A3/</guid><description>NAT 网络地址转换(NAT,Network Address Translation)属接入广域网(WAN)技术，是一种将私有（保留）地址转化为合法IP地址的转换技术。 是网络层协议。
目前最常用的端口多路复用NAPT(Network Address/Port Translators)中的Cone NAT型（圆锥型）。
客户机（内网终端）访问公网服务时，其IP和端口会被映射为网关的一个端口，客户机所有访问外网的流量均通过此端口，同时，此端口收到的所有数据包都会返回到客户机。在网关时，两个不同session但端口号相同。
通常，家用网络终端通过家用路由器访问互联网就是通过NAT技术，家用路由器会被DHCP服务器分配一个临时的公网IP，用以访问公网；其它终端如手机、电脑和路由器组建一个私网，其中，路由器为网关（NAT服务器）,终端设备访问外网服务时，其IP和端口会被映射为网关的一个端口。
NAT 和代理 iptables 的 nat 表， 可以设置 SNAT、DNAT、MASQUERADE。
SNAT 对源IP的转换 是指在数据包从网卡发送出去的时候，把数据包中的源地址部分替换为指定的IP，这样，接收方就认为数据包的来源是被替换的那个IP的主机</description></item><item><title>POST-content-type</title><link>https://www.liut.xyz/posts/net/post-content-type/</link><pubDate>Sat, 23 Sep 2017 15:15:15 +0800</pubDate><guid>https://www.liut.xyz/posts/net/post-content-type/</guid><description>application/x-www-form-urlencoded 常用键值对post方式,为默认的content-type 这应该是最常见的 POST 提交数据的方式了。浏览器的原生 表单，如果不设置 enctype属性，那么最终就会以 application/x-www-form-urlencoded 方式提交数据。请求类似于下面这样（无关的请求头在本文中都省略掉了）：
POST http://www.example.com HTTP/1.1 Content-Type: application/x-www-form-urlencoded;charset=utf-8 title=test&amp;amp;sub%5B%5D=1&amp;amp;sub%5B%5D=2&amp;amp;sub%5B%5D=3 multipart/form-data 这又是一个常见的 POST 数据提交的方式。我们使用表单上传文件时，必须让 表单的 enctype等于 multipart/form-data。直接来看一个请求示例：</description></item><item><title>shadowsocks-配置</title><link>https://www.liut.xyz/posts/net/shadowsocks-%E9%85%8D%E7%BD%AE/</link><pubDate>Sat, 23 Sep 2017 15:15:15 +0800</pubDate><guid>https://www.liut.xyz/posts/net/shadowsocks-%E9%85%8D%E7%BD%AE/</guid><description>shadowsocks 手动启动命令 server config
{ &amp;#34;server&amp;#34;: &amp;#34;1.1.1.1&amp;#34;, &amp;#34;server_port&amp;#34;: 1111, &amp;#34;local_port&amp;#34;: 1123, &amp;#34;password&amp;#34;: &amp;#34;1111111111&amp;#34;, &amp;#34;timeout&amp;#34;: 600, &amp;#34;method&amp;#34;: &amp;#34;aes-256-cfb&amp;#34; } command ssserver -c /etc/shadowsocks.</description></item></channel></rss>