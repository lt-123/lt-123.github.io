<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>liut</title><link>https://www.liut.xyz/</link><description>Recent content on liut</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Copyright notice</copyright><lastBuildDate>Tue, 22 Mar 2022 15:07:42 +0800</lastBuildDate><atom:link href="https://www.liut.xyz/index.xml" rel="self" type="application/rss+xml"/><item><title>Openwrt阻止局域网dns问题</title><link>https://www.liut.xyz/posts/openwrt%E9%98%BB%E6%AD%A2%E5%B1%80%E5%9F%9F%E7%BD%91dns%E9%97%AE%E9%A2%98/</link><pubDate>Tue, 22 Mar 2022 15:07:42 +0800</pubDate><guid>https://www.liut.xyz/posts/openwrt%E9%98%BB%E6%AD%A2%E5%B1%80%E5%9F%9F%E7%BD%91dns%E9%97%AE%E9%A2%98/</guid><description>当把域名解析到一个私有网段的 IP 地址，并且 openwrt 做主路由时，无法正常查询。
解决方案：
在OpenWrt的管理界面，在 网络 &amp;ndash;&amp;gt; DHCP/DNS &amp;ndash;&amp;gt; 常规配置 中，将 &amp;ldquo;重绑定保护&amp;rdquo; 取消掉就可以了。</description></item><item><title>ArchLinux Install</title><link>https://www.liut.xyz/posts/os/arch-install/</link><pubDate>Sun, 18 Jul 2021 14:43:08 +0800</pubDate><guid>https://www.liut.xyz/posts/os/arch-install/</guid><description>准备 官方安装引导 Installation_guide
镜像下载地址
下载镜像并刻盘，开启主板 uefi，启动到 arch iso
启动到 ISO 进入到系统后，先确定有没有联网， 联网是必须的，不然没有办法进行安装， ping baidu.com
默认情况下，如果接入了互联网并开启了 DHCP，会自动联网，如果是使用我无线网，可以使用 iwctl 命令进行联网
联网后，可以使用 Installation_guide 命令在线查看官方安装向导</description></item><item><title>终端快捷键</title><link>https://www.liut.xyz/posts/cli/%E7%BB%88%E7%AB%AF%E5%BF%AB%E6%8D%B7%E9%94%AE/</link><pubDate>Mon, 17 Aug 2020 20:16:04 +0800</pubDate><guid>https://www.liut.xyz/posts/cli/%E7%BB%88%E7%AB%AF%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid><description> 快捷键 按键 描述 Ctrl-A HOME 用于将光标定位到本行最前面 Ctrl-E End 即将光标移动到本行末尾 Ctrl-B ← 用于将光标向左移动一格 Ctrl-F → 用于将光标向右移动一格 Ctrl-H Backspace 删除光标左侧的一个字符 Ctrl-D Delete 删除光标所在处的字符 Ctrl-K 删除从光标处开始到结尾处的所有字符 Ctrl-U 删除从光标开始到行首的所有字符,一般在密码或命令输入错误时常用 Ctrl-W 删除当前光标左侧的一个单词 Ctrl-L 清屏，相当于clear命令 Ctrl-R 搜索命令记录 Ctrl-P ↑ 相当于上箭头键，即显示上一个命令 Ctrl-N ↓ 相当于下箭头键，即显示下一个命令</description></item><item><title>Manjaro-20-Gnome配置</title><link>https://www.liut.xyz/posts/os/manjaro20-gnome%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 14 Aug 2020 19:03:52 +0800</pubDate><guid>https://www.liut.xyz/posts/os/manjaro20-gnome%E9%85%8D%E7%BD%AE/</guid><description>源的选择和添加 选择最佳源 # 选择一个速度最好的源， 可以多选 sudo pacman-mirrors -i -c China -m rank # 更新系统 这步操作可能会很耗时 sudo pacman -Syyu 添加 manjarocn 源 修改 /etc/pacman.</description></item><item><title>Ubuntu20.04 安装提示 Executing 'grub-install /dev/sda1' faild</title><link>https://www.liut.xyz/posts/os/ubuntu20.04-install/</link><pubDate>Sat, 25 Apr 2020 07:13:42 +0800</pubDate><guid>https://www.liut.xyz/posts/os/ubuntu20.04-install/</guid><description>Ubuntu 20.04 发布之后第一时间下载体验，无奈安装最后阶段 grub 安装失败，导致无法正常引导启动到系统。提示错误如下：
Executing &amp;#39;grub-install /dev/sda1&amp;#39; faild 设置中文提示是 执行 &amp;#39;grub-install /dev/sda1&amp;#39; 失败。 这是一个致命错误。 启动模式是 efi + gpt，已关闭 secure-boot, 使用 U 盘安装，目标盘是固态硬盘。主要硬件配置如下：</description></item><item><title>Cli 程序收藏</title><link>https://www.liut.xyz/posts/cli/cli-%E7%A8%8B%E5%BA%8F%E6%94%B6%E8%97%8F/</link><pubDate>Mon, 02 Sep 2019 11:15:29 +0800</pubDate><guid>https://www.liut.xyz/posts/cli/cli-%E7%A8%8B%E5%BA%8F%E6%94%B6%E8%97%8F/</guid><description>命令行程序收藏
*nix 通用 辅助程序 zsh/oh-my-zsh bash 的升级版， 后者是 zsh 的配置 系统增强 tree 以树状显示当前文件夹以及子文件夹所有问题 -L 选项可指定最大层级， 如三层 tree -L 3 bat 支持代码代码高亮的 less lsd/exa 高级的 ls 命令 fzf 高级的 find 命令 ripgrep 高级的 grep 命令， 命令是 rg nnn 一个终端文件管理器 tldr 在线的 shell 命令文档 mdr 一个命令行的 Markdown 文件阅读器 其他 curl icanhazip.</description></item><item><title>Gradle Android 打包插件</title><link>https://www.liut.xyz/posts/code/androidreleaseplugin/</link><pubDate>Thu, 29 Aug 2019 21:24:25 +0800</pubDate><guid>https://www.liut.xyz/posts/code/androidreleaseplugin/</guid><description>工作中写的一些 Gradle Task, 整理成了一个 plugin, 已发布到 Gradle 社区仓库， 源码： https://github.com/lt-123/AndroidReleasePlugin
功能说明 打包指定变种 apk 输出到指定的文件夹并重命名 对指定变种 apk 进行加固（仅支持360加固） 使用 引入 添加 classpath</description></item><item><title>从 Java 类的初始化看待饿汉单例</title><link>https://www.liut.xyz/posts/java/java-%E5%8D%95%E4%BE%8B/</link><pubDate>Thu, 01 Aug 2019 20:27:36 +0800</pubDate><guid>https://www.liut.xyz/posts/java/java-%E5%8D%95%E4%BE%8B/</guid><description>先说观点： 在一般情况下， 饿汉式单例也不一定是立即加载的， 没必要特意使用写法复杂并且可能效率不高的懒汉模式。
单例模式 Java中单例 (Singleton) 模式是一种广泛使用的设计模式。单例模式的主要作用是保证在Java程序中，某个类只有一个实例存在。
分类以及常见写法 根据单例的初始化时机， java 单例可分为两大类别， 懒汉式和饿汉式。 （此外， 还有登记式， 不在本文讨论范围内）
饿汉式 饿汉式是在类加载器初始化该单例类时进行实例化。 常见方式如下：
静态工厂方法式饿汉 public class EagerSingleton { private static final EagerSingleton INSTANCE = new EagerSingleton(); private EagerSingleton() { System.</description></item><item><title>Mac Iterm 配置</title><link>https://www.liut.xyz/posts/os/mac-iterm-%E9%85%8D%E7%BD%AE/</link><pubDate>Tue, 26 Mar 2019 20:30:05 +0800</pubDate><guid>https://www.liut.xyz/posts/os/mac-iterm-%E9%85%8D%E7%BD%AE/</guid><description>配置全局呼入呼出快捷键
Preferences &amp;gt; keys &amp;gt; HotKey (Show/hide all windows with &amp;hellip;) 设置 guake 模式</description></item><item><title>MariaDB 配置</title><link>https://www.liut.xyz/posts/os/mariadb%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 14 Jan 2019 10:23:03 +0800</pubDate><guid>https://www.liut.xyz/posts/os/mariadb%E9%85%8D%E7%BD%AE/</guid><description>安装 sudo apt install mariadb-server
查看状态 sudo systemctl status mariadb
查看版本 一定要sudo
sudo mysql -V
登录数据库 sudo sql
可选参数 -u 指定用户</description></item><item><title>Manjaro Xfce Tim Wechat</title><link>https://www.liut.xyz/posts/os/manjaro-xfce-tim-wechat/</link><pubDate>Tue, 21 Aug 2018 17:16:56 +0800</pubDate><guid>https://www.liut.xyz/posts/os/manjaro-xfce-tim-wechat/</guid><description>国内Deepin Linux提供了较可靠的wine版本Tim、QQ、微信等wine应用， 并移植到了arch； Manjaro 基于arch，所以也可以使用。 以下是manjaro xfce 版本安装Tim过程，微信等同理。
安装 sudo pacman -S deepin.com.qq.office sudo pacman -S deepin.com.wechat 使用以上命令可直接安装，并开箱即用，无需配置，但字体略模糊。
问题 在安装WPS后，Tim等wine应用的字体特糊，简直不看入目，以下有两个解决办法：</description></item><item><title>xfce 桌面快捷键配置</title><link>https://www.liut.xyz/posts/os/xfce%E6%A1%8C%E9%9D%A2%E5%BF%AB%E6%8D%B7%E9%94%AE%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 20 Aug 2018 22:23:36 +0800</pubDate><guid>https://www.liut.xyz/posts/os/xfce%E6%A1%8C%E9%9D%A2%E5%BF%AB%E6%8D%B7%E9%94%AE%E9%85%8D%E7%BD%AE/</guid><description>xfce 桌面默认快捷键很多，很容易与其他软件冲突， 而且没有GUI的设置快捷键程序（manjaro xfce）, 可通过修改以下文件解决冲突，重新登录后生效。
配置路径 # 用户配置 ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-keyboard-shortcuts.xml # 全局配置 /etc/xdg/xfce4/xfconf/xfce-perchannel-xml/xfce4-keyboard-shortcuts.xml 修改说明 建议修改用户目录的配置文件，修改前先做好备份， 其中文件中是有转义的，按照原格式转义就行。
commands custom &amp;lt;Alt&amp;gt;F1：xfce4-popup-applicationsmenu 打开右键菜单 &amp;lt;Alt&amp;gt;F2：xfrun4 打开应用程序运行窗口，同&amp;lt;Alt&amp;gt;F3差不多 &amp;lt;Alt&amp;gt;F3：xfce4-appfinder 打开应用程序查找器 &amp;lt;Alt&amp;gt;Print：xfce4-screenshooter -w 窗口截图 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;Delete：xflock4 锁屏 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;Escape：xkill &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;t：exo-open --launch TerminalEmulator 打开模拟终端 &amp;lt;Primary&amp;gt;Escape：xfce4-popup-whiskermenu 打开启动器菜单，类似windows的开始 Print：xfce4-screenshooter -f 屏幕截图 &amp;lt;Super&amp;gt;1：gmusicbrowser 打开音乐播放器 &amp;lt;Super&amp;gt;2：pidgin 打开pidgin即时通讯软件 &amp;lt;Super&amp;gt;4：gnumeric 打开gnumeric，xfce自带的表格软件 &amp;lt;Super&amp;gt;e：mousepad 打开文本编辑器 &amp;lt;Super&amp;gt;f：exo-open --launch FileManager 打开文件管理器 &amp;lt;Super&amp;gt;m：exo-open --launch MailReader 打开邮件客户端 &amp;lt;Super&amp;gt;p：xfce4-display-settings --minimal 打开显示/分辨率设置 &amp;lt;Super&amp;gt;r：xfce4-appfinder 打开应用程序运行弹窗 &amp;lt;Super&amp;gt;t：exo-open --launch TerminalEmulator 打开模拟终端 &amp;lt;Super&amp;gt;w：exo-open --launch WebBrowser 打开默认浏览器 defalut &amp;lt;Alt&amp;gt;F1：xfce4-popup-applicationsmenu 打开右键菜单 &amp;lt;Alt&amp;gt;F2：xfrun4 打开应用程序运行窗口，同&amp;lt;Alt&amp;gt;F3差不多 &amp;lt;Alt&amp;gt;F3：xfce4-appfinder 打开应用程序查找器 &amp;lt;Alt&amp;gt;Print：xfce4-screenshooter -w 窗口截图 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;Delete：xflock4 锁屏 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;Escape：xkill &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;t：exo-open --launch TerminalEmulator 打开模拟终端 &amp;lt;Primary&amp;gt;Escape：xfce4-popup-whiskermenu 打开启动器菜单，类似windows的开始 Print：xfce4-screenshooter -f 屏幕截图 &amp;lt;Super&amp;gt;1：gmusicbrowser 打开音乐播放器 &amp;lt;Super&amp;gt;2：pidgin 打开pidgin即时通讯软件 &amp;lt;Super&amp;gt;4：gnumeric 打开gnumeric，xfce自带的表格软件 &amp;lt;Super&amp;gt;e：mousepad 打开文本编辑器 &amp;lt;Super&amp;gt;f：exo-open --launch FileManager 打开文件管理器 &amp;lt;Super&amp;gt;m：exo-open --launch MailReader 打开邮件客户端 &amp;lt;Super&amp;gt;p：xfce4-display-settings --minimal 打开显示/分辨率设置 &amp;lt;Super&amp;gt;r：xfce4-appfinder 打开应用程序查找器 &amp;lt;Super&amp;gt;t：exo-open --launch TerminalEmulator 打开模拟终端 &amp;lt;Super&amp;gt;w：exo-open --launch WebBrowser 打开默认浏览器 xfwm4 custom &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;End：move_window_next_workspace_key 把窗口移到下个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;Home：move_window_prev_workspace_key 把窗口移到上个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_1：move_window_workspace_1_key 把窗口移到第1个工作区（KP_1：小键盘数字1，以下同） &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_2：move_window_workspace_2_key 把窗口移到第2个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_3：move_window_workspace_3_key 把窗口移到第3个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_4：move_window_workspace_4_key 把窗口移到第4个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_5：move_window_workspace_5_key 把窗口移到第5个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_6：move_window_workspace_6_key 把窗口移到第6个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_7：move_window_workspace_7_key 把窗口移到第7个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_8：move_window_workspace_8_key 把窗口移到第8个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_9：move_window_workspace_9_key 把窗口移到第9个工作区 &amp;lt;Alt&amp;gt;Delete：del_workspace_key 删除工作区 &amp;lt;Alt&amp;gt;F10：maximize_window_key 窗口最大化/最小化切换 &amp;lt;Alt&amp;gt;F11：fullscreen_key 窗口全屏切换 &amp;lt;Alt&amp;gt;F12：above_key &amp;lt;Alt&amp;gt;F4：close_window_key 关闭窗口 &amp;lt;Alt&amp;gt;F5：maximize_horiz_key 窗口水平最大化 &amp;lt;Alt&amp;gt;F6：maximize_vert_key 窗口垂直最大化 &amp;lt;Alt&amp;gt;F7：maximize_window_key 窗口最大化切换 &amp;lt;Alt&amp;gt;F8：stick_window_key &amp;lt;Alt&amp;gt;F9：hide_window_key 隐藏窗口（最小化） &amp;lt;Alt&amp;gt;Insert：add_workspace_key 添加工作区 &amp;lt;Alt&amp;gt;&amp;lt;Shift&amp;gt;Tab：cycle_reverse_windows_key 反向切换窗口 &amp;lt;Alt&amp;gt;space：popup_menu_key 右键菜单 &amp;lt;Alt&amp;gt;Tab：cycle_windows_key 切换窗口 &amp;lt;Control&amp;gt;&amp;lt;Alt&amp;gt;d：show_desktop_key 显示桌面 &amp;lt;Control&amp;gt;&amp;lt;Alt&amp;gt;Down：down_workspace_key 切换到下边的工作区 &amp;lt;Control&amp;gt;&amp;lt;Alt&amp;gt;Left：left_workspace_key 切换到左边的工作区 &amp;lt;Control&amp;gt;&amp;lt;Alt&amp;gt;Right：right_workspace_key 切换到右边的工作区 &amp;lt;Control&amp;gt;&amp;lt;Alt&amp;gt;Up：up_workspace_key 切换到上边的工作区 &amp;lt;Control&amp;gt;F1：workspace_1_key 切换到第1个工作区 &amp;lt;Control&amp;gt;F2：workspace_2_key 切换到第2个工作区 &amp;lt;Control&amp;gt;F3：workspace_3_key 切换到第3个工作区 &amp;lt;Control&amp;gt;F4：workspace_4_key 切换到第4个工作区 &amp;lt;Control&amp;gt;F5：workspace_5_key 切换到第5个工作区 &amp;lt;Control&amp;gt;F6：workspace_6_key 切换到第6个工作区 &amp;lt;Control&amp;gt;F7：workspace_7_key 切换到第7个工作区 &amp;lt;Control&amp;gt;F8：workspace_8_key 切换到第8个工作区 &amp;lt;Control&amp;gt;F9：workspace_9_key 切换到第9个工作区 &amp;lt;Control&amp;gt;F10：workspace_10_key 切换到第10个工作区 &amp;lt;Control&amp;gt;F11：workspace_11_key 切换到第11个工作区 &amp;lt;Control&amp;gt;F12：workspace_12_key 切换到第12个工作区 &amp;lt;Control&amp;gt;&amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Left：move_window_left_key 移动窗口到左边工作区 &amp;lt;Control&amp;gt;&amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Right：move_window_right_key 移动窗口到右边工作区 &amp;lt;Control&amp;gt;&amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Up：move_window_up_key 移动窗口到上边工作区 Down：down_key 向下 Escape：cancel_key 取消 Left：left_key 向左 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;d：show_desktop_key 显示桌面 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;Down：down_workspace_key 切换到下边的工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;End：move_window_next_workspace_key 把窗口移到下个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;Home：move_window_prev_workspace_key 把窗口移到上个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_1：move_window_workspace_1_key 把窗口移到第1个工作区（KP_1：小键盘数字1，以下同） &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_2：move_window_workspace_2_key 把窗口移到第2个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_3：move_window_workspace_3_key 把窗口移到第3个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_4：move_window_workspace_4_key 把窗口移到第4个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_5：move_window_workspace_5_key 把窗口移到第5个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_6：move_window_workspace_6_key 把窗口移到第6个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_7：move_window_workspace_7_key 把窗口移到第7个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_8：move_window_workspace_8_key 把窗口移到第8个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_9：move_window_workspace_9_key 把窗口移到第9个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;Left：left_workspace_key 切换到左边的工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;Right：right_workspace_key 切换到右边的工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;Up：up_workspace_key 切换到上边的工作区 &amp;lt;Primary&amp;gt;F1：workspace_1_key 切换到第1个工作区 &amp;lt;Primary&amp;gt;F2：workspace_2_key 切换到第2个工作区 &amp;lt;Primary&amp;gt;F3：workspace_3_key 切换到第3个工作区 &amp;lt;Primary&amp;gt;F4：workspace_4_key 切换到第4个工作区 &amp;lt;Primary&amp;gt;F5：workspace_5_key 切换到第5个工作区 &amp;lt;Primary&amp;gt;F6：workspace_6_key 切换到第6个工作区 &amp;lt;Primary&amp;gt;F7：workspace_7_key 切换到第7个工作区 &amp;lt;Primary&amp;gt;F8：workspace_8_key 切换到第8个工作区 &amp;lt;Primary&amp;gt;F9：workspace_9_key 切换到第9个工作区 &amp;lt;Primary&amp;gt;F10：workspace_10_key 切换到第10个工作区 &amp;lt;Primary&amp;gt;F11：workspace_11_key 切换到第11个工作区 &amp;lt;Primary&amp;gt;F12：workspace_12_key 切换到第12个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Left：move_window_left_key 移动窗口到左边工作区 &amp;lt;Primary&amp;gt;&amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Right：move_window_right_key 移动窗口到右边工作区 &amp;lt;Primary&amp;gt;&amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Up：move_window_up_key 移动窗口到上边工作区 Right：right_key 向右 &amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Page_Down：lower_window_key &amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Page_Up：raise_window_key &amp;lt;Super&amp;gt;Tab：switch_window_key 切换窗口 Up：up_key defalut &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;End：move_window_next_workspace_key 把窗口移到下个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;Home：move_window_prev_workspace_key 把窗口移到上个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_1：move_window_workspace_1_key 把窗口移到第1个工作区（KP_1：小键盘数字1，以下同） &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_2：move_window_workspace_2_key 把窗口移到第2个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_3：move_window_workspace_3_key 把窗口移到第3个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_4：move_window_workspace_4_key 把窗口移到第4个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_5：move_window_workspace_5_key 把窗口移到第5个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_6：move_window_workspace_6_key 把窗口移到第6个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_7：move_window_workspace_7_key 把窗口移到第7个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_8：move_window_workspace_8_key 把窗口移到第8个工作区 &amp;lt;Alt&amp;gt;&amp;lt;Control&amp;gt;KP_9：move_window_workspace_9_key 把窗口移到第9个工作区 &amp;lt;Alt&amp;gt;Delete：del_workspace_key 删除工作区 &amp;lt;Alt&amp;gt;F10：maximize_window_key 窗口最大化/最小化切换 &amp;lt;Alt&amp;gt;F11：fullscreen_key 窗口全屏切换 &amp;lt;Alt&amp;gt;F12：above_key &amp;lt;Alt&amp;gt;F4：close_window_key 关闭窗口 &amp;lt;Alt&amp;gt;F5：maximize_horiz_key 窗口水平最大化 &amp;lt;Alt&amp;gt;F6：maximize_vert_key 窗口垂直最大化 &amp;lt;Alt&amp;gt;F7：maximize_window_key 窗口最大化切换 &amp;lt;Alt&amp;gt;F8：stick_window_key &amp;lt;Alt&amp;gt;F9：hide_window_key 隐藏窗口（最小化） &amp;lt;Alt&amp;gt;Insert：add_workspace_key 添加工作区 &amp;lt;Alt&amp;gt;&amp;lt;Shift&amp;gt;Tab：cycle_reverse_windows_key 反向切换窗口t&amp;gt; &amp;lt;Alt&amp;gt;space：popup_menu_key 右键菜单 &amp;lt;Alt&amp;gt;Tab：cycle_windows_key 切换窗口 &amp;lt;Control&amp;gt;&amp;lt;Alt&amp;gt;d：show_desktop_key 显示桌面 &amp;lt;Control&amp;gt;&amp;lt;Alt&amp;gt;Down：down_workspace_key 切换到下边的工作区 &amp;lt;Control&amp;gt;&amp;lt;Alt&amp;gt;Left：left_workspace_key 切换到左边的工作区 &amp;lt;Control&amp;gt;&amp;lt;Alt&amp;gt;Right：right_workspace_key 切换到右边的工作区 &amp;lt;Control&amp;gt;&amp;lt;Alt&amp;gt;Up：up_workspace_key 切换到上边的工作区 &amp;lt;Control&amp;gt;F1：workspace_1_key 切换到第1个工作区 &amp;lt;Control&amp;gt;F2：workspace_2_key 切换到第2个工作区 &amp;lt;Control&amp;gt;F3：workspace_3_key 切换到第3个工作区 &amp;lt;Control&amp;gt;F4：workspace_4_key 切换到第4个工作区 &amp;lt;Control&amp;gt;F5：workspace_5_key 切换到第5个工作区 &amp;lt;Control&amp;gt;F6：workspace_6_key 切换到第6个工作区 &amp;lt;Control&amp;gt;F7：workspace_7_key 切换到第7个工作区 &amp;lt;Control&amp;gt;F8：workspace_8_key 切换到第8个工作区 &amp;lt;Control&amp;gt;F9：workspace_9_key 切换到第9个工作区 &amp;lt;Control&amp;gt;F10：workspace_10_key 切换到第10个工作区 &amp;lt;Control&amp;gt;F11：workspace_11_key 切换到第11个工作区 &amp;lt;Control&amp;gt;F12：workspace_12_key 切换到第12个工作区 &amp;lt;Control&amp;gt;&amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Left：move_window_left_key 移动窗口到左边工作区 &amp;lt;Control&amp;gt;&amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Right：move_window_right_key 移动窗口到右边工作区 &amp;lt;Control&amp;gt;&amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Up：move_window_up_key 移动窗口到上边工作区 Down：down_key 向下 Escape：cancel_key 取消 Left：left_key 向左 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;d：show_desktop_key 显示桌面 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;Down：down_workspace_key 切换到下边的工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;End：move_window_next_workspace_key 把窗口移到下个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;Home：move_window_prev_workspace_key 把窗口移到上个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_1：move_window_workspace_1_key 把窗口移到第1个工作区（KP_1：小键盘数字1，以下同） &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_2：move_window_workspace_2_key 把窗口移到第2个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_3：move_window_workspace_3_key 把窗口移到第3个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_4：move_window_workspace_4_key 把窗口移到第4个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_5：move_window_workspace_5_key 把窗口移到第4个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_6：move_window_workspace_6_key 把窗口移到第4个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_7：move_window_workspace_7_key 把窗口移到第4个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_8：move_window_workspace_8_key 把窗口移到第4个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;KP_9：move_window_workspace_9_key 把窗口移到第4个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;Left：left_workspace_key &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;Right：right_workspace_key 切换到右边的工作区 &amp;lt;Primary&amp;gt;&amp;lt;Alt&amp;gt;Up：up_workspace_key 切换到上边的工作区 &amp;lt;Primary&amp;gt;F1：workspace_1_key 切换到第1个工作区 &amp;lt;Primary&amp;gt;F2：workspace_2_key 切换到第2个工作区 &amp;lt;Primary&amp;gt;F3：workspace_3_key 切换到第3个工作区 &amp;lt;Primary&amp;gt;F4：workspace_4_key 切换到第4个工作区 &amp;lt;Primary&amp;gt;F5：workspace_5_key 切换到第5个工作区 &amp;lt;Primary&amp;gt;F6：workspace_6_key 切换到第6个工作区 &amp;lt;Primary&amp;gt;F7：workspace_7_key 切换到第7个工作区 &amp;lt;Primary&amp;gt;F8：workspace_8_key 切换到第8个工作区 &amp;lt;Primary&amp;gt;F9：workspace_9_key 切换到第9个工作区 &amp;lt;Primary&amp;gt;F10：workspace_10_key 切换到第10个工作区 &amp;lt;Primary&amp;gt;F11：workspace_11_key 切换到第11个工作区 &amp;lt;Primary&amp;gt;F12：workspace_12_key 切换到第12个工作区 &amp;lt;Primary&amp;gt;&amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Left：move_window_left_key 移动窗口到左边工作区 &amp;lt;Primary&amp;gt;&amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Right：move_window_right_key 移动窗口到右边工作区 &amp;lt;Primary&amp;gt;&amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Up：move_window_up_key 移动窗口到上边工作区 Right：right_key 向右 &amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Page_Down：lower_window_key &amp;lt;Shift&amp;gt;&amp;lt;Alt&amp;gt;Page_Up：raise_window_key &amp;lt;Super&amp;gt;Tab：switch_window_key 切换窗口 Up：up_key 向上 详情来自：xfce 快捷键</description></item><item><title>Shell命令一般格式</title><link>https://www.liut.xyz/posts/cli/shell%E5%91%BD%E4%BB%A4%E4%B8%80%E8%88%AC%E6%A0%BC%E5%BC%8F/</link><pubDate>Fri, 27 Oct 2017 16:35:26 +0800</pubDate><guid>https://www.liut.xyz/posts/cli/shell%E5%91%BD%E4%BB%A4%E4%B8%80%E8%88%AC%E6%A0%BC%E5%BC%8F/</guid><description>尽管一些命令可以通过简单地输入一个字来输入，但其它命令使用标志和参数。每个命令都具有语法，指定要求的和可选的标志和参数。命令的一般格式如下：
CommandName flag(s) parameter(s) 以下是有关命令的一些一般规则：
* 命令、标志和参数间的空格是有意义的。 * 通过用分号（;）分隔命令，两个命令可在同一行上输入。例如： $ CommandOne;CommandTwo shell 顺序地运行命令。 * 命令是区分大小写的。shell 区别大写字母和小写字母。对于 shell，print 不同于 PRINT 或 Print。 * 很长的命令可以通过使用反斜杠 (\) 字符在不止一行上输入。反斜杠向 shell 标识行继续。以下示例是一个跨两行的命令： $ ls Mail info temp \ (按 Enter 键) &amp;gt; diary （出现 &amp;gt; 提示符） &amp;gt; 字符是次提示符（$ 是非 root 用户的缺省主提示符），表示当前行是前一行的继续。请注意 csh（C shell）不给出次提示符，并且断行必须在字边界，且其主提示符是 %。 命令名</description></item><item><title>ubuntu安装nodejs</title><link>https://www.liut.xyz/posts/os/linux%E5%AE%89%E8%A3%85nodejs/</link><pubDate>Fri, 27 Oct 2017 16:26:30 +0800</pubDate><guid>https://www.liut.xyz/posts/os/linux%E5%AE%89%E8%A3%85nodejs/</guid><description>通过命令行安装：
官网安装方法：
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - sudo apt-get install -y nodejs 通过包管理器 apt 直接安装再通过一个第三方工具n来管理node版本：</description></item><item><title>常用ADB命令</title><link>https://www.liut.xyz/posts/android/%E5%B8%B8%E7%94%A8adb%E5%91%BD%E4%BB%A4/</link><pubDate>Fri, 27 Oct 2017 16:17:36 +0800</pubDate><guid>https://www.liut.xyz/posts/android/%E5%B8%B8%E7%94%A8adb%E5%91%BD%E4%BB%A4/</guid><description># 显示已连接的设备 adb devices # 显示结果如下所示： # List of devices attached # 6e070d91 device # 其中6e070d91是设备的id，device是设备的状态。 # 设备状态有3种：offline表示设备离线，device表示设备连接正常，no device表示没有设备连接 # 如果有多台手机连接到电脑，则需要用 -s 指定adb调用的手机，如 # adb -s 6e070d91 install helloWorld.</description></item><item><title>Shadowsocks使用kcptun加速</title><link>https://www.liut.xyz/posts/net/shadowsocks%E4%BD%BF%E7%94%A8kcptun%E5%8A%A0%E9%80%9F/</link><pubDate>Thu, 26 Oct 2017 21:00:02 +0800</pubDate><guid>https://www.liut.xyz/posts/net/shadowsocks%E4%BD%BF%E7%94%A8kcptun%E5%8A%A0%E9%80%9F/</guid><description>常用加速软件有 NetSpeed 、KcpTun 、锐速（Server Speeder） 等，其中，NetSpeed 最为粗暴，直接双倍发包，能大大降低丢包率，当然，流量也会双倍消耗；kcptun ，双边加速（服务端和客户端都需要配置），基于 KCP 协议的 UDP 隧道，它可以将 TCP 流转换为 KCP+UDP 流。而 KCP 是一个快速可靠协议，要求配置低，效果明显；锐速，单边加速，收费，官方已破产，有破解版，需配置内核。以下为 kcptun 配置记录。</description></item><item><title>NAT 和 iptables</title><link>https://www.liut.xyz/posts/net/%E5%85%B3%E4%BA%8Enat%E7%9A%84%E7%90%86%E8%A7%A3/</link><pubDate>Wed, 25 Oct 2017 15:32:02 +0800</pubDate><guid>https://www.liut.xyz/posts/net/%E5%85%B3%E4%BA%8Enat%E7%9A%84%E7%90%86%E8%A7%A3/</guid><description>NAT 网络地址转换(NAT,Network Address Translation)属接入广域网(WAN)技术，是一种将私有（保留）地址转化为合法IP地址的转换技术。 是网络层协议。
目前最常用的端口多路复用NAPT(Network Address/Port Translators)中的Cone NAT型（圆锥型）。
客户机（内网终端）访问公网服务时，其IP和端口会被映射为网关的一个端口，客户机所有访问外网的流量均通过此端口，同时，此端口收到的所有数据包都会返回到客户机。在网关时，两个不同session但端口号相同。
通常，家用网络终端通过家用路由器访问互联网就是通过NAT技术，家用路由器会被DHCP服务器分配一个临时的公网IP，用以访问公网；其它终端如手机、电脑和路由器组建一个私网，其中，路由器为网关（NAT服务器）,终端设备访问外网服务时，其IP和端口会被映射为网关的一个端口。
NAT 和代理 iptables 的 nat 表， 可以设置 SNAT、DNAT、MASQUERADE。
SNAT 对源IP的转换 是指在数据包从网卡发送出去的时候，把数据包中的源地址部分替换为指定的IP，这样，接收方就认为数据包的来源是被替换的那个IP的主机</description></item><item><title>从简书迁hugo Jianshu2hugo</title><link>https://www.liut.xyz/posts/jianshu2hugo/</link><pubDate>Tue, 26 Sep 2017 10:41:56 +0800</pubDate><guid>https://www.liut.xyz/posts/jianshu2hugo/</guid><description>体验了一把hugo，感觉很良好，就迁过来了。。。
首先，简书有导出文章功能，很赞！导出后是没办法直接在hugo使用的，因为hugo需要文件头，简书是没有的，就自己动手写了一段 java 代码，给文章加头，如下
/** * 添加文件头 * 用于简书导出文档转HUGO，具体格式请自调整 * * @author Liut */ @Test public void jianshu2hugo() throws IOException { File sourceDir = new File(&amp;#34;D:/js2hugo/sourceDir&amp;#34;); // 源文件 File outputDir = new File(&amp;#34;D:/js2hugo/outputDir&amp;#34;); // 输出文件 if (!</description></item><item><title>About</title><link>https://www.liut.xyz/about/</link><pubDate>Sat, 23 Sep 2017 21:49:20 +0200</pubDate><guid>https://www.liut.xyz/about/</guid><description>动态类型一时爽，代码重构火葬场
Email: liut@liut.xyz</description></item><item><title>/etc/rc.d/rc.local 与 /etc/profile .bash_profile .bashrc 文件执行顺序</title><link>https://www.liut.xyz/posts/os/linux-profilerc.local%E7%AD%89%E6%96%87%E4%BB%B6%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</link><pubDate>Sat, 23 Sep 2017 15:15:15 +0800</pubDate><guid>https://www.liut.xyz/posts/os/linux-profilerc.local%E7%AD%89%E6%96%87%E4%BB%B6%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</guid><description>第一步：通过/boot/vm进行启动 vmlinuz 第二步：init /etc/inittab 第三步：启动相应的脚本，并且打开终端
rc.sysinit rc.d(里面的脚本） rc.local（以root执行） 第四步：启动login登录界面 login 第五步：在用户登录的时候执行sh脚本的顺序，每次登录的时候都会完全执行的
/etc/profile.d/file /etc/profile（全局环境变量） /etc/bashrc (debain系为/etc/bash.bashrc) /root/.bashrc /root/.bash_profile 自 http://blog.aizhet.com/Linux/10074.html 拓展 https://wido.</description></item><item><title>aosp-源码下载</title><link>https://www.liut.xyz/posts/note/aosp-%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD/</link><pubDate>Sat, 23 Sep 2017 15:15:15 +0800</pubDate><guid>https://www.liut.xyz/posts/note/aosp-%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD/</guid><description>//TODO 详细
https://segmentfault.com/a/1190000008428585
https://mirror.tuna.tsinghua.edu.cn/help/AOSP/</description></item><item><title>java的几种对象(PO,VO,DAO,BO,POJO，DTO)解释</title><link>https://www.liut.xyz/posts/java/java%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AF%B9%E8%B1%A1povodaobopojodto%E8%A7%A3%E9%87%8A/</link><pubDate>Sat, 23 Sep 2017 15:15:15 +0800</pubDate><guid>https://www.liut.xyz/posts/java/java%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AF%B9%E8%B1%A1povodaobopojodto%E8%A7%A3%E9%87%8A/</guid><description>PO： persistant object持久对象 最形象的理解就是一个PO就是数据库中的一条记录。 好处是可以把一条记录作为一个对象处理，可以方便的转为其它对象。
BO： business object业务对象 主要作用是把业务逻辑封装为一个对象。这个对象可以包括一个或多个其它的对象。 比如一个简历，有教育经历、工作经历、 关系等等。 我们可以把教育经历对应一个PO，工作经历对应一个PO， 关系对应一个PO。 建立一个对应简历的BO对象处理简历，每个BO包含这些PO。 这样处理业务逻辑时，我们就可以针对BO去处理。
VO ： value object值对象 ViewObject表现层对象 主要对应界面显示的数据对象。对于一个WEB页面，或者SWT、SWING的一个界面，用一个VO对象对应整个界面的值。</description></item><item><title>POST-content-type</title><link>https://www.liut.xyz/posts/net/post-content-type/</link><pubDate>Sat, 23 Sep 2017 15:15:15 +0800</pubDate><guid>https://www.liut.xyz/posts/net/post-content-type/</guid><description>application/x-www-form-urlencoded 常用键值对post方式,为默认的content-type 这应该是最常见的 POST 提交数据的方式了。浏览器的原生 表单，如果不设置 enctype属性，那么最终就会以 application/x-www-form-urlencoded 方式提交数据。请求类似于下面这样（无关的请求头在本文中都省略掉了）：
POST http://www.example.com HTTP/1.1 Content-Type: application/x-www-form-urlencoded;charset=utf-8 title=test&amp;amp;sub%5B%5D=1&amp;amp;sub%5B%5D=2&amp;amp;sub%5B%5D=3 multipart/form-data 这又是一个常见的 POST 数据提交的方式。我们使用表单上传文件时，必须让 表单的 enctype等于 multipart/form-data。直接来看一个请求示例：</description></item><item><title>shadowsocks-配置</title><link>https://www.liut.xyz/posts/net/shadowsocks-%E9%85%8D%E7%BD%AE/</link><pubDate>Sat, 23 Sep 2017 15:15:15 +0800</pubDate><guid>https://www.liut.xyz/posts/net/shadowsocks-%E9%85%8D%E7%BD%AE/</guid><description>shadowsocks 手动启动命令 server config
{ &amp;#34;server&amp;#34;: &amp;#34;1.1.1.1&amp;#34;, &amp;#34;server_port&amp;#34;: 1111, &amp;#34;local_port&amp;#34;: 1123, &amp;#34;password&amp;#34;: &amp;#34;1111111111&amp;#34;, &amp;#34;timeout&amp;#34;: 600, &amp;#34;method&amp;#34;: &amp;#34;aes-256-cfb&amp;#34; } command ssserver -c /etc/shadowsocks.</description></item><item><title>Ubuntu-16-04-编译-LineageOS-4-OnePlus-bacon</title><link>https://www.liut.xyz/posts/note/ubuntu-16-04-%E7%BC%96%E8%AF%91-lineageos-4-oneplus-bacon/</link><pubDate>Sat, 23 Sep 2017 15:15:15 +0800</pubDate><guid>https://www.liut.xyz/posts/note/ubuntu-16-04-%E7%BC%96%E8%AF%91-lineageos-4-oneplus-bacon/</guid><description>lineageOS 编译 准备 一台64位Ubuntu16.04PC，可以是远程服务器或虚拟机 至少8个g的内存，100g以上的空闲硬盘空间（不支持NTFS） 一个好的网络 一台 OnePlus bacon 所需环境 ubuntu 16.04 bc bison build-essential curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libesd0-dev liblz4-tool libncurses5-dev libsdl1.</description></item><item><title>一次作死-rm -rf /</title><link>https://www.liut.xyz/posts/os/%E4%B8%80%E6%AC%A1%E4%BD%9C%E6%AD%BB-rm-rf-/</link><pubDate>Sat, 23 Sep 2017 15:15:15 +0800</pubDate><guid>https://www.liut.xyz/posts/os/%E4%B8%80%E6%AC%A1%E4%BD%9C%E6%AD%BB-rm-rf-/</guid><description>前段时间在bandwagon租个低配vps,年费19刀,用以shadowsocks服务器,折腾了段时间最终是弄上了,而且网速尚可,我这大约十兆小水管能四五百K的样子,但后来又发现一个免费的ss,虽然延时高点,但速度还是可以的,而后就申请退货了,既然用不到也就没必要一直养着它,而bandwagon特良心支持一月内无条件退货.
既然要退货了, 就测(zuo)试(si)下 著名的 rm -rf / 命令.
直接裸敲是又提示的,linux现在越来越智能了,如图,但也是可以强制执行滴.
执行之后打印出好多cannot remove,难道这样也不行??
然后执行下ls就明白了,特么没有这条命令&amp;hellip;
然后 cd 接两下TAB建 就是只剩下这几个文件夹了,貌似是内存的吧?我也不懂.
然后登出ssh之后,就再也登不上了.
去后台看一下,状态还在运行,点击reboot 就彻底gg了,开不开机了.</description></item><item><title>位运算</title><link>https://www.liut.xyz/posts/java/%E4%BD%8D%E8%BF%90%E7%AE%97/</link><pubDate>Sat, 23 Sep 2017 15:15:15 +0800</pubDate><guid>https://www.liut.xyz/posts/java/%E4%BD%8D%E8%BF%90%E7%AE%97/</guid><description>1. 原码反码补码：
计算机存储数据都是以二进制存储
byte 8位 short 16位 int 32位 long 64位
其中 最高位为符号位，0代表正数，1为负数，并且负数以补码的形式存在和参与计算,如果两个不同长度的数据进行位运算时，系统会将二者按右端对齐，然后进行位运算。
关于原码，反码，补码
原码 即正确的值。 反码 正数不变，负数反码 符号位不变，其余取反。 补码 正数不变，负数为反码+1。</description></item><item><title>markdown 语法</title><link>https://www.liut.xyz/posts/markdown%E8%AF%AD%E6%B3%95/</link><pubDate>Sat, 20 May 2017 11:58:06 +0200</pubDate><guid>https://www.liut.xyz/posts/markdown%E8%AF%AD%E6%B3%95/</guid><description>markdown 语法 导航 部分 markdown 风格不支持导航
语法： [TOC]
效果演示：
[TOC]
分割线： * * * *** ***** - - - --- --------------------------------------- 效果演示：</description></item><item><title>为 CMD 设置别名</title><link>https://www.liut.xyz/posts/os/win%E8%AE%BE%E7%BD%AE%E5%88%AB%E5%90%8D/</link><pubDate>Sat, 20 May 2017 11:58:06 +0200</pubDate><guid>https://www.liut.xyz/posts/os/win%E8%AE%BE%E7%BD%AE%E5%88%AB%E5%90%8D/</guid><description>最近，在工作上，经常使用 cmd 来执行某些命令，有些命令很长很固定，就想，win 的 cmd 能不能像 Linux 终端一样去设置别名（alias）呢？在网上搜下，果然可以！就整理一下贴出来，以备查阅。
win 下有个 doskey 命令，就相当于Linux中的alias，可以用来设置别名：
# 设置 ls = dir doskey ls=dir # ls = dir $*表示后面可以接参数 doskey d=dir $* 嗯，别以为这么简单，因为这些命令仅对当前窗口有效，也就是说，关掉 cmd 窗口，下次打开就没了。</description></item><item><title>优雅地用 Android Studio 打开 eclipse 项目</title><link>https://www.liut.xyz/posts/android/%E4%BC%98%E9%9B%85%E5%9C%B0%E7%94%A8-android-studio-%E6%89%93%E5%BC%80-eclipse-%E9%A1%B9%E7%9B%AE/</link><pubDate>Sat, 20 May 2017 11:58:06 +0200</pubDate><guid>https://www.liut.xyz/posts/android/%E4%BC%98%E9%9B%85%E5%9C%B0%E7%94%A8-android-studio-%E6%89%93%E5%BC%80-eclipse-%E9%A1%B9%E7%9B%AE/</guid><description>注：本脚本近适用于单 project 项目，如果有其他 project 依赖，请自使用 eclipse 的导出 gradle 项目功能。
痛点 一些老旧的 Android 项目是 eclipse 的， 而且 eclipse 早就放弃了对 Android 的支持， 需要自行配置或使用旧版本。 如果使用 as 导入功能， 会破坏原有的目录结构， eclipse 有导出为 gradle 项目功能， 导出后还需要二次手动修改、更新等。</description></item><item><title>在 win10 中使用 zsh、fish</title><link>https://www.liut.xyz/posts/os/%E5%9C%A8-win10-%E4%B8%AD%E4%BD%BF%E7%94%A8-zsh/</link><pubDate>Sat, 20 May 2017 11:58:06 +0200</pubDate><guid>https://www.liut.xyz/posts/os/%E5%9C%A8-win10-%E4%B8%AD%E4%BD%BF%E7%94%A8-zsh/</guid><description>如今 win10 可启用 Linux（ubuntu） 子系统，带来的极大的方便，但 zsh 用户只能通过 bash 命令进入bash，还要再手动 zsh 才能进入 zsh ，这确实有点不太方便，以下步鄹可使直接进入 zsh。
安装 zsh （废话），可选装 oh-my-zsh ,大牛亦可自行调教。</description></item><item><title>基于 Html+css+js 的混合开发</title><link>https://www.liut.xyz/posts/android/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/</link><pubDate>Sat, 20 May 2017 11:58:06 +0200</pubDate><guid>https://www.liut.xyz/posts/android/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/</guid><description>[TOC]
关于混合开发 混合开发有多种实现方式，最简单的就是 web 网页加壳， 不过这种方式体验较差； 另外比较高级点的就是采用一些混合开发框架， 如 ionic 等； 还有就是 react native,weex 这种框架，同样是用前端代码，却能构建出 native application，极大提高了性能、兼容性。
现代的混合开发框架的选择 经过了解，现在比较流行的框架有 react native、 ionic、cordova 以及国内的 weex、wex5、mui 等，就百度、知乎以及请教前端工作的朋友等途径对它们进行了了解，初步选定了React Native，weex，ionic 以及 Mobile Angular UI。</description></item></channel></rss>